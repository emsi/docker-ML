FROM gcr.io/tensorflow/tensorflow:1.3.0-gpu-py3 

RUN apt-get update && apt-get install -y --no-install-recommends \
	git \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

#RUN pip --no-cache-dir install scikit-learn nltk openpyxl seaborn pandas gensim imbalanced-learn Keras h5py Keras many_stop_words regex 

RUN apt-get update --fix-missing && apt-get install -y wget

# Install Anaconda
# RUN wget https://repo.continuum.io/archive/Anaconda3-4.4.0-Linux-x86_64.sh && \
#	bash ./Anaconda3-4.4.0-Linux-x86_64.sh -b -p /anaconda3 && \
#	rm ./Anaconda3-4.4.0-Linux-x86_64.sh 

# Install miniconda instead
RUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
	bash ./Miniconda3-latest-Linux-x86_64.sh -b -p /anaconda3 && \
	rm -f ./Miniconda3-latest-Linux-x86_64.sh

ENV PATH /anaconda3/bin:$PATH
RUN conda upgrade conda && \
	conda upgrade --all && \
	conda upgrade conda  && \
	conda install nb_conda jupyter notebook

# numpy jupyter notebook
# Create py3 TF environment s
RUN conda create -n py3 python=3.6 numpy matplotlib scikit-learn nltk openpyxl seaborn pandas gensim Keras h5py Keras regex tensorflow-gpu jupyter

# RUN conda create -n py2 python=2 numpy matplotlib scikit-learn nltk openpyxl seaborn pandas gensim Keras h5py Keras regex tensorflow-gpu jupyter

RUN mkdir -p /notebooks/TF-examples && \
	mv /notebooks/*.ipynb /notebooks/TF-examples 
RUN mkdir -p /notebooks/Keras-examples
COPY Keras-examples/examples /notebooks/Keras-examples


# Set shell to bash
ENV SHELL /bin/bash

#WORKDIR /notebooks
#CMD ["/run_jupyter.sh"]
